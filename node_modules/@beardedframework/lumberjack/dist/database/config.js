"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//import * as postgres from 'pg-promise'
const mysql = require("mysql");
const pg_1 = require("pg");
/*
 * @class config
 */
class config {
    /*
     * used to mount the routes
     * @return { void }
     * */
    constructor() {
        /*
         * @var { object } db
         * */
        this._db = {};
        this.username = process.env.DB_USERNAME;
        this.password = process.env.DB_PASSWORD;
        this.host = process.env.DB_HOST;
        this.database = process.env.DB_DATABASE;
        this.port = process.env.DB_PORT;
        this.db = this.selectDatabase(process.env.DB_CONNECTION);
    }
    /*
     * the instance used on singleton
     * @return { config }
     * */
    static get Instance() {
        return this._instance || (this._instance = new this());
    }
    /*
     * get the database instance
     * @return { object }
     * */
    get db() {
        return this._db;
    }
    /*
     * set the database instance
     * @set { object }
     * @return { void }
     * */
    set db(theDB) {
        this._db = theDB;
    }
    /*
     *
     * select the database instance
     * @param { string } selected
     * @return { databaseInstance }
     * */
    selectDatabase(selected) {
        switch (selected) {
            case 'postgres':
                return this.postgresInstance();
            case 'mysql':
                return this.mysqlInstance();
            default:
        }
    }
    /*
     * create mysql database instance
     * @return { databaseInstance }
     * */
    mysqlInstance() {
        return mysql.createConnection({
            host: this.host,
            user: this.username,
            password: this.password,
            database: this.database
        });
    }
    /*
     * create postgresql database instance
     * @return { databaseInstance }
     * */
    postgresInstance() {
        let client = new pg_1.Client({
            user: this.username,
            database: this.database,
            password: this.password
        });
        client.connect();
        return client;
    }
}
exports.default = config;
//# sourceMappingURL=config.js.map